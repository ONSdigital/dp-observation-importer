// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package eventtest

import (
	"context"
	"github.com/ONSdigital/dp-observation-importer/event"
	"github.com/ONSdigital/dp-observation-importer/observation"
	"sync"
)

var (
	lockResultWriterMockWrite sync.RWMutex
)

// Ensure, that ResultWriterMock does implement ResultWriter.
// If this is not the case, regenerate this file with moq.
var _ event.ResultWriter = &ResultWriterMock{}

// ResultWriterMock is a mock implementation of event.ResultWriter.
//
//     func TestSomethingThatUsesResultWriter(t *testing.T) {
//
//         // make and configure a mocked event.ResultWriter
//         mockedResultWriter := &ResultWriterMock{
//             WriteFunc: func(ctx context.Context, results []*observation.Result)  {
// 	               panic("mock out the Write method")
//             },
//         }
//
//         // use mockedResultWriter in code that requires event.ResultWriter
//         // and then make assertions.
//
//     }
type ResultWriterMock struct {
	// WriteFunc mocks the Write method.
	WriteFunc func(ctx context.Context, results []*observation.Result)

	// calls tracks calls to the methods.
	calls struct {
		// Write holds details about calls to the Write method.
		Write []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Results is the results argument value.
			Results []*observation.Result
		}
	}
}

// Write calls WriteFunc.
func (mock *ResultWriterMock) Write(ctx context.Context, results []*observation.Result) {
	if mock.WriteFunc == nil {
		panic("ResultWriterMock.WriteFunc: method is nil but ResultWriter.Write was just called")
	}
	callInfo := struct {
		Ctx     context.Context
		Results []*observation.Result
	}{
		Ctx:     ctx,
		Results: results,
	}
	lockResultWriterMockWrite.Lock()
	mock.calls.Write = append(mock.calls.Write, callInfo)
	lockResultWriterMockWrite.Unlock()
	mock.WriteFunc(ctx, results)
}

// WriteCalls gets all the calls that were made to Write.
// Check the length with:
//     len(mockedResultWriter.WriteCalls())
func (mock *ResultWriterMock) WriteCalls() []struct {
	Ctx     context.Context
	Results []*observation.Result
} {
	var calls []struct {
		Ctx     context.Context
		Results []*observation.Result
	}
	lockResultWriterMockWrite.RLock()
	calls = mock.calls.Write
	lockResultWriterMockWrite.RUnlock()
	return calls
}
