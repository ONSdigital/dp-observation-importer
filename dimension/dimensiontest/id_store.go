// Code generated by MockGen. DO NOT EDIT.
// Source: id_cache.go

// Package dimensiontest is a generated GoMock package.
package dimensiontest

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDStore is a mock of IDStore interface
type MockIDStore struct {
	ctrl     *gomock.Controller
	recorder *MockIDStoreMockRecorder
}

// MockIDStoreMockRecorder is the mock recorder for MockIDStore
type MockIDStoreMockRecorder struct {
	mock *MockIDStore
}

// NewMockIDStore creates a new mock instance
func NewMockIDStore(ctrl *gomock.Controller) *MockIDStore {
	mock := &MockIDStore{ctrl: ctrl}
	mock.recorder = &MockIDStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDStore) EXPECT() *MockIDStoreMockRecorder {
	return m.recorder
}

// GetIDs mocks base method
func (m *MockIDStore) GetIDs(ctx context.Context, instanceID string) (map[string]string, error) {
	ret := m.ctrl.Call(m, "GetIDs", ctx, instanceID)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIDs indicates an expected call of GetIDs
func (mr *MockIDStoreMockRecorder) GetIDs(ctx, instanceID interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIDs", reflect.TypeOf((*MockIDStore)(nil).GetIDs), ctx, instanceID)
}
